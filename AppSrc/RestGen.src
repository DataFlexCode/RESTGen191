Use DFAllEnt.pkg
Use cCJStandardCommandBarSystem.pkg
Use StdAbout.pkg
    
Object oHtmlHelp is a cHtmlHelp
End_Object

Object oApplication is a cApplication
    Set pbPreserveEnvironment to False
    Set peHelpType to htHtmlHelp
End_Object

Object oToolTipController is a cToolTipController
    Move Self to ghoToolTipController
End_Object

Use oEditContextMenu.pkg
Use oDEOEditContextMenu17.pkg

Object oMain is a Panel
    Set Icon to "favicon.ico"

    Property Handle phoViewMenu 0
    Property Handle phoReportMenu 0

    Set Label To "Generate structs from JSON"
    Set Location to 4 3
    Set Size to 300 450

    Object oCommandBarSystem is a cCJCommandBarSystem
        Set pbTimerUpdate to True

        Procedure OnCreateCommandBars
            Handle hoOptions
            Get OptionsObject to hoOptions
            Forward Send OnCreateCommandBars
        End_Procedure

        Object oMenuBar is a cCJMenuBar

            Object oFileMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup          
                Set psCaption to "&File"
                Set psCategory to "Menus"


                Object oExitMenu is a cCJExitMenuItem
                    Set pbControlBeginGroup to True
                End_Object

            End_Object

            Object oViewMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup
                Set psCaption to "&View"
                Set psToolTip to "View"
                Set psDescription to "Available Views"

                Object oGeneratorMenuItem is a cCJMenuItem
                    Set psCaption to "Generator"
                    Set psTooltip to "Generator"
                
                    Procedure OnExecute Variant vCommandBarControl
                        Handle hoClient
                        Get Client_Id to hoClient
                        Send Activate_oGenerator of hoClient
                    End_Procedure
                End_Object

                Delegate Set phoViewMenu to Self
            End_Object


            Object oWindowMenu is a cCJMDIWindowsMenuItem
                Set peControlType to xtpControlPopup      
                Set psCaption to "&Window"
                Set psToolTip to "Window"
                Set psDescription to "Display Current Views and set other display options."    

                // These are the static windows items. More will be created in onPopupInit
                Object oDisplayOptionsMenu is a cCJMenuItem
                    Set peControlType to xtpControlPopup              
                    Set psCaption to "&Display Options"
                    Set psToolTip to "Display Options"
                    Set psDescription to "Set display options"

                    Object oStatusbarMenu is a cCJStatusbarMenuItem
                    End_Object

                    Object oAutoArrangeIconsMenu is a cCJAutoArrangeIconsMenuItem
                    End_Object

                    Object oRestoreMenusMenu is a cCJRestoreMenusMenuItem
                        Set pbControlBeginGroup to True
                    End_Object

                End_Object

                Object oCascadeMenu is a cCJCascadeMenuItem
                    Set pbControlBeginGroup to True
                End_Object

                Object oHorizTile is a cCJTileHorizontally
                End_Object

                Object oVertTile is a cCJTileVertically
                End_Object

                Object oMinimizeMenuItem is a cCJMinimizeWindowsMenuItem
                    Set pbControlBeginGroup to True
                End_Object

                Object oRestoreMenuItem is a cCJRestoreWindowsMenuItem
                End_Object

                Object oArrangeIconsMenuItem is a cCJAutoArrangeIconsMenuItem
                    Set pbControlBeginGroup to True
                End_Object

            End_Object

            Object oHelpMenu is a cCJMenuItem
                Set peControlType to xtpControlPopup    
                Set psCaption to "&Help"
                Set psDescription to "Access Information for learning and using this DataFlex application."
                Set psToolTip to "Help"

                Object oHelpMenuItem is a cCJHelpMenuItem 
                End_Object

                Object oAboutMenuItem is a cCJAboutMenuItem
                End_Object

            End_Object

        End_Object

        Object oStatusBar is a cCJStatusBar

            Object oStatusPane1 is a cCJStatusBarPane
                Set piID to sbpIDIdlePane
                Set pbStyleStretch to True
            End_Object

            Object oStatusPane2 is a cCJStatusBarPane
                Set phoViewPane to Self
                Set pbStyleStretch to True
            End_Object

        End_Object

    End_Object

    Object oClientArea is a ClientArea

//        Use Dd_debug.dg // This Provides access to dd debugger by pressing ctrl+d within any view. Good for debugging

//        Use StdAbout.pkg
        Use Generator.vw

        Procedure Activate_About
            Send DoAbout "RESTGen JSON struct generator" "0.1.0" "Copyright (c) Unicorn InterGlobal Limited" "Unicorn InterGlobal Limited" "UnicornLogo.bmp"
        End_Procedure

    End_Object

    Procedure AutoActivate
        Handle hoMenu

        // this activates all views from the view menu
        Get phoViewMenu to hoMenu
        If hoMenu Begin
           Broadcast Send Execute of hoMenu
        End

        // this activates all views from the report view menu
        Get phoReportMenu to hoMenu
        If hoMenu Begin
           Broadcast Send Execute of hoMenu
        End
    End_Procedure

    Procedure MakeGoodPanelSize
        Handle hoView hoClient
        Integer iSize iLoc iHeight iWidth iOldHeight iOldWidth 
        Integer iLeft iTop iRight iBottom
        Get Client_Id to hoClient
        If hoClient Begin
            
            // if not using commandbars or for some reason they are not created yet we
            // will use whatever the client size is
            If (ghoCommandBars=0 or not(IsComObjectCreated(ghoCommandBars))) Begin
                Get GuiSize of hoClient to iSize  // starting size of client area
                Move (Hi(iSize)) to iOldHeight
                Move (Low(iSize)) to iOldWidth
            End
            Else Begin
               // if commandbars are created, the actual size of the client area must be obtained
               // from the commandbar 
               Send ComGetClientRect of ghoCommandBars (&iLeft) (&iTop) (&iRight) (&iBottom)
               Move (iRight-iLeft) to iOldWidth
               Move (iBottom-iTop) to iOldHeight
            End
            
            Move iOldHeight to iHeight
            Move iOldWidth to iWidth
            
            // for each mdi client see if it fits, keep track of largest size needed
            Get Next_Mdi_Dialog of hoClient True to hoView // find first
            While (hoView)
                Get GuiWindowSize of hoView to iSize    // size of view
                Get GuiLocation of hoView to iLoc // location of view
                Move (hi(iSize)+hi(iLoc)+10 max iHeight)  to iHeight // max height needed (+10 pixels is small border)
                Move (low(iSize)+low(iLoc)+10 max iWidth) to iWidth  // max width needed
                Get Next_Mdi_Dialog of hoClient False to hoView // find next view
            Loop
            Move (iHeight-iOldHeight  max 0) to iHeight // get delta compared to old size. We want delta
            Move (iWidth-iOldWidth max 0) to iWidth     // only if the new size is bigger (i.e., > 0)
            If  (iHeight>0 or iWidth>0) Begin
                Get GuiSize to iSize // now add the delta to the panel size
                Set GuiSize to (hi(iSize)+iHeight) (low(iSize)+iWidth)
                Send Adjust_Logicals // adjust from gui to regular size
            End
        End
    End_Procedure

    // special test program  augmentation which opens all views and report views and
    // makes sure that the size of the panel is big enough

    Procedure End_Construct_Object
        Boolean bAutoActivate
        Get Auto_Activate_State to bAutoActivate
        Forward Send End_Construct_Object
        If bAutoActivate Begin
            Send AutoActivate       // activate all views and report views
            Send MakeGoodPanelSize  // make sure the panel is big enough for all of this
        End
    End_Procedure

End_Object

Start_UI
